// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.23.0
// source: items.sql

package oldqueries

import (
	"context"
)

const listItems = `-- name: ListItems :many
SELECT ` + "`" + `id` + "`" + `, ` + "`" + `code` + "`" + `, ` + "`" + `code_type` + "`" + `, ` + "`" + `location` + "`" + `, ` + "`" + `title` + "`" + `, ` + "`" + `data_source` + "`" + `, ` + "`" + `comments` + "`" + `, ` + "`" + `created` + "`" + `, ` + "`" + `title_translated` + "`" + ` FROM ` + "`" + `items` + "`" + `
`

func (q *Queries) ListItems(ctx context.Context) ([]Items, error) {
	rows, err := q.db.QueryContext(ctx, listItems)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Items
	for rows.Next() {
		var i Items
		if err := rows.Scan(
			&i.ID,
			&i.Code,
			&i.CodeType,
			&i.Location,
			&i.Title,
			&i.DataSource,
			&i.Comments,
			&i.Created,
			&i.TitleTranslated,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
